-----------------------------------
To prepare ec2 instances for application
-----------------------------------
sudo apt update
sudo apt install -y docker.io
sudo systemctl start docker
sudo systemctl enable docker

-----------------------------------
To prepare ec2 instances for load balancer
-----------------------------------
sudo apt update
sudo apt install nginx -y 
sudo systemctl start nginx

-----------------------------------
To start docker container
-----------------------------------
sudo docker run -d -p 3000:80 mirronel/todo-frontend:optimized-v7
sudo docker run -d -p 4000:4000 mirronel/todo-backend:latest

-----------------------------------
Configure nginx to perform as a load balancer
-----------------------------------

user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    upstream frontend_servers {
        server vm1-ip:3000;  # Replace vm1_ip with actual IP
        server vm2-ip:3000;  # Replace vm2_ip with actual IP
    }

    upstream backend_servers {
        server vm1-ip:4000;  # Replace vm1_ip with actual IP
        server vm2-ip:4000;  # Replace vm2_ip with actual IP
    }

    # Frontend Load Balancer
    server {
        listen 3000;
        # server_name your_domain.com;  # Replace with your domain

        location / {
            proxy_pass http://frontend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Backend Load Balancer
    server {
        listen 4000;
        # server_name your_domain.com;  # Replace with your domain

        location / {
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
